{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ef106199",
   "metadata": {
    "papermill": {
     "duration": 0.004227,
     "end_time": "2024-08-15T13:59:05.716544",
     "exception": false,
     "start_time": "2024-08-15T13:59:05.712317",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# ACNH today's catches\n",
    "\n",
    "When you run the code it spits out all the insects or fish you can find in Animal Crossing: New Horisons today and where to find them. It was created in the Kaggle Jupyter Notebook environment. \n",
    "\n",
    "Input: \n",
    "- `type`: either`'insect'`, `'fish'`, or `'sea creature'`\n",
    "- `weather`: either`'rain'`, `'snow'`, or neither\n",
    "- `curr_date` (optional): enter a date in the format of dd/mm/yyyy\n",
    "\n",
    "It is a work in progress,I still have to fix:\n",
    "- how to make it run outside of Kaggle Environment\n",
    "- add in sea cretures\n",
    "- I might add in difficulty of catching but idk yet ü§∑‚Äç‚ôÄÔ∏è\n",
    "\n",
    "Have fun besties üòé"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dda78bbd",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "collapsed": true,
    "execution": {
     "iopub.execute_input": "2024-08-15T13:59:05.725639Z",
     "iopub.status.busy": "2024-08-15T13:59:05.725128Z",
     "iopub.status.idle": "2024-08-15T13:59:06.908807Z",
     "shell.execute_reply": "2024-08-15T13:59:06.907532Z"
    },
    "jupyter": {
     "outputs_hidden": true
    },
    "papermill": {
     "duration": 1.191971,
     "end_time": "2024-08-15T13:59:06.912034",
     "exception": false,
     "start_time": "2024-08-15T13:59:05.720063",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/construction.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/bottoms.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/accessories.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/insects.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/floors.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/shoes.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/wall-mounted.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/achievements.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/umbrellas.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/rugs.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/housewares.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/art.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/reactions.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/miscellaneous.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/dress-up.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/photos.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/bags.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/villagers.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/recipes.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/socks.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fossils.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fencing.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/tops.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/wallpaper.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/music.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/posters.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/other.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/headwear.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/tools.csv\n",
      "/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fish.csv\n"
     ]
    }
   ],
   "source": [
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input/'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "738446fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-15T13:59:06.921005Z",
     "iopub.status.busy": "2024-08-15T13:59:06.920459Z",
     "iopub.status.idle": "2024-08-15T13:59:06.944900Z",
     "shell.execute_reply": "2024-08-15T13:59:06.943713Z"
    },
    "papermill": {
     "duration": 0.0321,
     "end_time": "2024-08-15T13:59:06.947441",
     "exception": false,
     "start_time": "2024-08-15T13:59:06.915341",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def getThings(types, weather, curr_date = pd.Timestamp.now()):\n",
    "    \n",
    "    weather_list = ['Any weather']\n",
    "    if weather == 'rain':\n",
    "        weather_list.append('Rain only')\n",
    "    if weather == 'snow':\n",
    "        weather_list.append('snow')\n",
    "    if weather != 'rain':\n",
    "        weather_list.append('Any except rain')\n",
    "            \n",
    "    def getMonth(curr_date):\n",
    "        if curr_date.month == 1:\n",
    "            return \"Jan\"\n",
    "        elif curr_date.month == 2:\n",
    "            return \"Feb\"\n",
    "        elif curr_date.month == 3:\n",
    "            return \"Mar\"\n",
    "        elif curr_date.month == 4:\n",
    "            return \"Apr\"\n",
    "        elif curr_date.month == 5:\n",
    "            return \"May\"\n",
    "        elif curr_date.month == 6:\n",
    "            return \"Jun\"\n",
    "        elif curr_date.month == 7:\n",
    "            return \"Jul\"\n",
    "        elif curr_date.month == 8:\n",
    "            return \"Aug\"\n",
    "        elif curr_date.month == 9:\n",
    "            return \"Sep\"\n",
    "        elif curr_date.month == 10:\n",
    "            return \"Oct\"\n",
    "        elif curr_date.month == 11:\n",
    "            return \"Nov\"\n",
    "        elif curr_date.month == 12:\n",
    "            return \"Dec\"\n",
    "    m = getMonth(curr_date)\n",
    "    column = 'NH {}'.format(m)\n",
    "    \n",
    "    def getTimes(curr_date):    \n",
    "            time_bins = []\n",
    "            time_bins.append(\"All day\")    \n",
    "            t = curr_date.hour \n",
    "            if 3 < t < 19:\n",
    "                time_bins.append('4 AM ‚Äì 07 PM')\n",
    "            if 16 < t < 23:\n",
    "                time_bins.append('4 PM ‚Äì\\xa011 PM')\n",
    "            if (17 < t <= 24) | (t<8):\n",
    "                time_bins.append('5 PM ‚Äì\\xa08 AM')\n",
    "            if (19 < t <= 24) | (t<8):\n",
    "                time_bins.append('7 PM ‚Äì\\xa08 AM')\n",
    "            if (19 < t <= 24) | (t<4):\n",
    "                time_bins.append('7 PM ‚Äì\\xa04 AM')\n",
    "            if 8 < t < 19:\n",
    "                time_bins.append('8 AM ‚Äì\\xa07 PM')\n",
    "            if (23 < t <= 24) | (t<16):\n",
    "                time_bins.append('11 PM ‚Äì\\xa04 PM')\n",
    "            if 8 < t < 17:\n",
    "                time_bins.append('8 AM ‚Äì\\xa05 PM')\n",
    "            return time_bins\n",
    "        \n",
    "    \n",
    "    if types == 'insects':\n",
    "        filename = \"/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/insects.csv\"\n",
    "        df = pd.read_csv(filename)\n",
    "        tdf = df[['#', 'Name', 'Sell', 'Where/How', 'Weather', 'Total Catches to Unlock', column]]\n",
    "        time_bins = getTimes(curr_date)\n",
    "        tdf = tdf[tdf[column].isin(time_bins)]\n",
    "        tdf = tdf[tdf['Weather'].isin(weather_list)]\n",
    "        \n",
    "        print(\"There are {} unique insects to catch today!\\n\".format(len(tdf)))\n",
    "        def getInfo(x):\n",
    "            print(\"Name: \", x['Name'], \"\\n Where/How to find it: \", x['Where/How'], \"\\n Sell for: \", x['Sell'], \" bells \\n\")\n",
    "            return\n",
    "        tdf.apply(lambda x: getInfo(x), axis = 1)\n",
    "        \n",
    "        \n",
    "    elif types == 'fish':\n",
    "        filename = \"/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fish.csv\"\n",
    "        df = pd.read_csv(filename)\n",
    "        tdf = df[['#', 'Name', 'Sell', 'Where/How', 'Shadow', 'Rain/Snow Catch Up', column,'Size']]\n",
    "        time_bins = getTimes(curr_date)\n",
    "        tdf = tdf[tdf[column].isin(time_bins)]\n",
    "        print(\"There are {} unique fish to catch today!\\n\".format(len(tdf)))\n",
    "        def getInfo(x):\n",
    "            print(\"Name: \", x['Name'], \"\\n Where/How to find it: \", x['Where/How'], \"\\n Shadow size: \", x['Shadow'], \"\\n Sell for: \", x['Sell'], \" bells \\n\")\n",
    "            if ('Rain only'in weather_list) | ('snow' in weather_list):\n",
    "                #print(\"Watch out\")\n",
    "                pass\n",
    "            return\n",
    "        tdf.apply(lambda x: getInfo(x), axis = 1)\n",
    "        \n",
    "    elif types == 'sea creatures':\n",
    "        pass\n",
    "    else:\n",
    "        print('Not a valid type')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b73addbf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-15T13:59:06.955686Z",
     "iopub.status.busy": "2024-08-15T13:59:06.955302Z",
     "iopub.status.idle": "2024-08-15T13:59:07.030568Z",
     "shell.execute_reply": "2024-08-15T13:59:07.028954Z"
    },
    "papermill": {
     "duration": 0.083632,
     "end_time": "2024-08-15T13:59:07.034406",
     "exception": false,
     "start_time": "2024-08-15T13:59:06.950774",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 29 unique fish to catch today!\n",
      "\n",
      "Name:  barred knifejaw \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Medium \n",
      " Sell for:  5000  bells \n",
      "\n",
      "Name:  black bass \n",
      " Where/How to find it:  River \n",
      " Shadow size:  Large \n",
      " Sell for:  400  bells \n",
      "\n",
      "Name:  blue marlin \n",
      " Where/How to find it:  Pier \n",
      " Shadow size:  XX-Large \n",
      " Sell for:  10000  bells \n",
      "\n",
      "Name:  butterfly fish \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Small \n",
      " Sell for:  1000  bells \n",
      "\n",
      "Name:  carp \n",
      " Where/How to find it:  Pond \n",
      " Shadow size:  Large \n",
      " Sell for:  300  bells \n",
      "\n",
      "Name:  clown fish \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  X-Small \n",
      " Sell for:  650  bells \n",
      "\n",
      "Name:  coelacanth \n",
      " Where/How to find it:  Sea (rainy days) \n",
      " Shadow size:  XX-Large \n",
      " Sell for:  15000  bells \n",
      "\n",
      "Name:  crawfish \n",
      " Where/How to find it:  Pond \n",
      " Shadow size:  Small \n",
      " Sell for:  200  bells \n",
      "\n",
      "Name:  crucian carp \n",
      " Where/How to find it:  River \n",
      " Shadow size:  Small \n",
      " Sell for:  160  bells \n",
      "\n",
      "Name:  frog \n",
      " Where/How to find it:  Pond \n",
      " Shadow size:  Small \n",
      " Sell for:  120  bells \n",
      "\n",
      "Name:  giant trevally \n",
      " Where/How to find it:  Pier \n",
      " Shadow size:  X-Large \n",
      " Sell for:  4500  bells \n",
      "\n",
      "Name:  goldfish \n",
      " Where/How to find it:  Pond \n",
      " Shadow size:  X-Small \n",
      " Sell for:  1300  bells \n",
      "\n",
      "Name:  horse mackerel \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Small \n",
      " Sell for:  150  bells \n",
      "\n",
      "Name:  killifish \n",
      " Where/How to find it:  Pond \n",
      " Shadow size:  X-Small \n",
      " Sell for:  300  bells \n",
      "\n",
      "Name:  mahi-mahi \n",
      " Where/How to find it:  Pier \n",
      " Shadow size:  X-Large \n",
      " Sell for:  6000  bells \n",
      "\n",
      "Name:  moray eel \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Long \n",
      " Sell for:  2000  bells \n",
      "\n",
      "Name:  olive flounder \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  X-Large \n",
      " Sell for:  800  bells \n",
      "\n",
      "Name:  puffer fish \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Medium \n",
      " Sell for:  250  bells \n",
      "\n",
      "Name:  red snapper \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Large \n",
      " Sell for:  3000  bells \n",
      "\n",
      "Name:  ribbon eel \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Long \n",
      " Sell for:  600  bells \n",
      "\n",
      "Name:  sea bass \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  X-Large \n",
      " Sell for:  400  bells \n",
      "\n",
      "Name:  sea horse \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  X-Small \n",
      " Sell for:  1100  bells \n",
      "\n",
      "Name:  squid \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Medium \n",
      " Sell for:  500  bells \n",
      "\n",
      "Name:  suckerfish \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Medium w/Fin \n",
      " Sell for:  1500  bells \n",
      "\n",
      "Name:  surgeonfish \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Small \n",
      " Sell for:  1000  bells \n",
      "\n",
      "Name:  sweetfish \n",
      " Where/How to find it:  River \n",
      " Shadow size:  Medium \n",
      " Sell for:  900  bells \n",
      "\n",
      "Name:  tilapia \n",
      " Where/How to find it:  River \n",
      " Shadow size:  Medium \n",
      " Sell for:  800  bells \n",
      "\n",
      "Name:  whale shark \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Large w/Fin \n",
      " Sell for:  13000  bells \n",
      "\n",
      "Name:  zebra turkeyfish \n",
      " Where/How to find it:  Sea \n",
      " Shadow size:  Medium \n",
      " Sell for:  500  bells \n",
      "\n"
     ]
    }
   ],
   "source": [
    "getThings('fish',\"rain\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f4a8ecdf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-15T13:59:07.043678Z",
     "iopub.status.busy": "2024-08-15T13:59:07.043236Z",
     "iopub.status.idle": "2024-08-15T13:59:07.081094Z",
     "shell.execute_reply": "2024-08-15T13:59:07.079939Z"
    },
    "papermill": {
     "duration": 0.046754,
     "end_time": "2024-08-15T13:59:07.084968",
     "exception": false,
     "start_time": "2024-08-15T13:59:07.038214",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 35 unique insects to catch today!\n",
      "\n",
      "Name:  agrias butterfly \n",
      " Where/How to find it:  Flying near flowers \n",
      " Sell for:  3000  bells \n",
      "\n",
      "Name:  ant \n",
      " Where/How to find it:  On rotten turnips \n",
      " Sell for:  80  bells \n",
      "\n",
      "Name:  bagworm \n",
      " Where/How to find it:  Shaking trees (hardwood or cedar only) \n",
      " Sell for:  600  bells \n",
      "\n",
      "Name:  banded dragonfly \n",
      " Where/How to find it:  Flying near water \n",
      " Sell for:  4500  bells \n",
      "\n",
      "Name:  blue weevil beetle \n",
      " Where/How to find it:  On palm trees \n",
      " Sell for:  800  bells \n",
      "\n",
      "Name:  brown cicada \n",
      " Where/How to find it:  On hardwood/cedar trees \n",
      " Sell for:  250  bells \n",
      "\n",
      "Name:  cicada shell \n",
      " Where/How to find it:  On hardwood/cedar trees \n",
      " Sell for:  10  bells \n",
      "\n",
      "Name:  citrus long-horned beetle \n",
      " Where/How to find it:  On tree stumps \n",
      " Sell for:  350  bells \n",
      "\n",
      "Name:  darner dragonfly \n",
      " Where/How to find it:  Flying near water \n",
      " Sell for:  230  bells \n",
      "\n",
      "Name:  diving beetle \n",
      " Where/How to find it:  On rivers/ponds \n",
      " Sell for:  800  bells \n",
      "\n",
      "Name:  drone beetle \n",
      " Where/How to find it:  On trees (any kind) \n",
      " Sell for:  200  bells \n",
      "\n",
      "Name:  earth-boring dung beetle \n",
      " Where/How to find it:  On the ground \n",
      " Sell for:  300  bells \n",
      "\n",
      "Name:  flea \n",
      " Where/How to find it:  On villagers \n",
      " Sell for:  70  bells \n",
      "\n",
      "Name:  fly \n",
      " Where/How to find it:  Flying near trash (boots, tires, cans) or rotten turnips \n",
      " Sell for:  60  bells \n",
      "\n",
      "Name:  giant cicada \n",
      " Where/How to find it:  On hardwood/cedar trees \n",
      " Sell for:  500  bells \n",
      "\n",
      "Name:  grasshopper \n",
      " Where/How to find it:  On the ground \n",
      " Sell for:  160  bells \n",
      "\n",
      "Name:  jewel beetle \n",
      " Where/How to find it:  On tree stumps \n",
      " Sell for:  2400  bells \n",
      "\n",
      "Name:  long locust \n",
      " Where/How to find it:  On the ground \n",
      " Sell for:  200  bells \n",
      "\n",
      "Name:  mantis \n",
      " Where/How to find it:  On flowers \n",
      " Sell for:  430  bells \n",
      "\n",
      "Name:  migratory locust \n",
      " Where/How to find it:  On the ground \n",
      " Sell for:  600  bells \n",
      "\n",
      "Name:  miyama stag \n",
      " Where/How to find it:  On trees (any kind) \n",
      " Sell for:  1000  bells \n",
      "\n",
      "Name:  orchid mantis \n",
      " Where/How to find it:  On white flowers \n",
      " Sell for:  2400  bells \n",
      "\n",
      "Name:  paper kite butterfly \n",
      " Where/How to find it:  Flying near flowers \n",
      " Sell for:  1000  bells \n",
      "\n",
      "Name:  pondskater \n",
      " Where/How to find it:  On rivers/ponds \n",
      " Sell for:  130  bells \n",
      "\n",
      "Name:  Rajah Brooke's birdwing \n",
      " Where/How to find it:  Flying near flowers \n",
      " Sell for:  2500  bells \n",
      "\n",
      "Name:  rice grasshopper \n",
      " Where/How to find it:  On the ground \n",
      " Sell for:  400  bells \n",
      "\n",
      "Name:  robust cicada \n",
      " Where/How to find it:  On hardwood/cedar trees \n",
      " Sell for:  300  bells \n",
      "\n",
      "Name:  rosalia batesi beetle \n",
      " Where/How to find it:  On tree stumps \n",
      " Sell for:  3000  bells \n",
      "\n",
      "Name:  saw stag \n",
      " Where/How to find it:  On trees (any kind) \n",
      " Sell for:  2000  bells \n",
      "\n",
      "Name:  stinkbug \n",
      " Where/How to find it:  On flowers \n",
      " Sell for:  120  bells \n",
      "\n",
      "Name:  tiger beetle \n",
      " Where/How to find it:  On the ground \n",
      " Sell for:  1500  bells \n",
      "\n",
      "Name:  walker cicada \n",
      " Where/How to find it:  On hardwood/cedar trees \n",
      " Sell for:  400  bells \n",
      "\n",
      "Name:  walking leaf \n",
      " Where/How to find it:  Disguised under trees \n",
      " Sell for:  600  bells \n",
      "\n",
      "Name:  wasp \n",
      " Where/How to find it:  Shaking trees \n",
      " Sell for:  2500  bells \n",
      "\n",
      "Name:  wharf roach \n",
      " Where/How to find it:  On beach rocks \n",
      " Sell for:  200  bells \n",
      "\n"
     ]
    }
   ],
   "source": [
    "getThings('insects',\"snow\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 661950,
     "sourceId": 2314697,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30746,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 5.256534,
   "end_time": "2024-08-15T13:59:07.611059",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-08-15T13:59:02.354525",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
