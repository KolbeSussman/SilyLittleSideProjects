{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2314697,"sourceType":"datasetVersion","datasetId":661950}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# ACNH today's catches\n\nWhen you run the code it spits out all the insects or fish you can find in Animal Crossing: New Horisons today and where to find them. It was created in the Kaggle Jupyter Notebook environment. \n\nInput: \n- `type`: either`'insect'`, `'fish'`, or `'sea creature'`\n- `weather`: either`'rain'`, `'snow'`, or neither\n- `curr_date` (optional): enter a date in the format of dd/mm/yyyy\n\nIt is a work in progress,I still have to fix:\n- how to make it run outside of Kaggle Environment\n- add in sea cretures\n- I might add in difficulty of catching but idk yet ü§∑‚Äç‚ôÄÔ∏è\n\nHave fun besties üòé\ntest","metadata":{}},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-15T13:53:37.009559Z","iopub.execute_input":"2024-08-15T13:53:37.010056Z","iopub.status.idle":"2024-08-15T13:53:37.593603Z","shell.execute_reply.started":"2024-08-15T13:53:37.010019Z","shell.execute_reply":"2024-08-15T13:53:37.592051Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/construction.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/bottoms.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/accessories.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/insects.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/floors.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/shoes.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/wall-mounted.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/achievements.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/umbrellas.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/rugs.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/housewares.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/art.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/reactions.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/miscellaneous.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/dress-up.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/photos.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/bags.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/villagers.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/recipes.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/socks.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fossils.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fencing.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/tops.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/wallpaper.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/music.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/posters.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/other.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/headwear.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/tools.csv\n/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fish.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"def getThings(types, weather, curr_date = pd.Timestamp.now()):\n    \n    weather_list = ['Any weather']\n    if weather == 'rain':\n        weather_list.append('Rain only')\n    if weather == 'snow':\n        weather_list.append('snow')\n    if weather != 'rain':\n        weather_list.append('Any except rain')\n            \n    def getMonth(curr_date):\n        if curr_date.month == 1:\n            return \"Jan\"\n        elif curr_date.month == 2:\n            return \"Feb\"\n        elif curr_date.month == 3:\n            return \"Mar\"\n        elif curr_date.month == 4:\n            return \"Apr\"\n        elif curr_date.month == 5:\n            return \"May\"\n        elif curr_date.month == 6:\n            return \"Jun\"\n        elif curr_date.month == 7:\n            return \"Jul\"\n        elif curr_date.month == 8:\n            return \"Aug\"\n        elif curr_date.month == 9:\n            return \"Sep\"\n        elif curr_date.month == 10:\n            return \"Oct\"\n        elif curr_date.month == 11:\n            return \"Nov\"\n        elif curr_date.month == 12:\n            return \"Dec\"\n    m = getMonth(curr_date)\n    column = 'NH {}'.format(m)\n    \n    def getTimes(curr_date):    \n            time_bins = []\n            time_bins.append(\"All day\")    \n            t = curr_date.hour \n            if 3 < t < 19:\n                time_bins.append('4 AM ‚Äì 07 PM')\n            if 16 < t < 23:\n                time_bins.append('4 PM ‚Äì\\xa011 PM')\n            if (17 < t <= 24) | (t<8):\n                time_bins.append('5 PM ‚Äì\\xa08 AM')\n            if (19 < t <= 24) | (t<8):\n                time_bins.append('7 PM ‚Äì\\xa08 AM')\n            if (19 < t <= 24) | (t<4):\n                time_bins.append('7 PM ‚Äì\\xa04 AM')\n            if 8 < t < 19:\n                time_bins.append('8 AM ‚Äì\\xa07 PM')\n            if (23 < t <= 24) | (t<16):\n                time_bins.append('11 PM ‚Äì\\xa04 PM')\n            if 8 < t < 17:\n                time_bins.append('8 AM ‚Äì\\xa05 PM')\n            return time_bins\n        \n    \n    if types == 'insects':\n        filename = \"/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/insects.csv\"\n        df = pd.read_csv(filename)\n        tdf = df[['#', 'Name', 'Sell', 'Where/How', 'Weather', 'Total Catches to Unlock', column]]\n        time_bins = getTimes(curr_date)\n        tdf = tdf[tdf[column].isin(time_bins)]\n        tdf = tdf[tdf['Weather'].isin(weather_list)]\n        \n        print(\"There are {} unique insects to catch today!\\n\".format(len(tdf)))\n        def getInfo(x):\n            print(\"Name: \", x['Name'], \"\\n Where/How to find it: \", x['Where/How'], \"\\n Sell for: \", x['Sell'], \" bells \\n\")\n            return\n        tdf.apply(lambda x: getInfo(x), axis = 1)\n        \n        \n    elif types == 'fish':\n        filename = \"/kaggle/input/animal-crossing-new-horizons-nookplaza-dataset/fish.csv\"\n        df = pd.read_csv(filename)\n        tdf = df[['#', 'Name', 'Sell', 'Where/How', 'Shadow', 'Rain/Snow Catch Up', column,'Size']]\n        time_bins = getTimes(curr_date)\n        tdf = tdf[tdf[column].isin(time_bins)]\n        print(\"There are {} unique fish to catch today!\\n\".format(len(tdf)))\n        def getInfo(x):\n            print(\"Name: \", x['Name'], \"\\n Where/How to find it: \", x['Where/How'], \"\\n Shadow size: \", x['Shadow'], \"\\n Sell for: \", x['Sell'], \" bells \\n\")\n            if ('Rain only'in weather_list) | ('snow' in weather_list):\n                #print(\"Watch out\")\n                pass\n            return\n        tdf.apply(lambda x: getInfo(x), axis = 1)\n        \n    elif types == 'sea creatures':\n        pass\n    else:\n        print('Not a valid type')\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-15T13:55:01.935136Z","iopub.execute_input":"2024-08-15T13:55:01.935629Z","iopub.status.idle":"2024-08-15T13:55:01.964068Z","shell.execute_reply.started":"2024-08-15T13:55:01.935592Z","shell.execute_reply":"2024-08-15T13:55:01.962457Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"getThings('fish',\"rain\")","metadata":{"execution":{"iopub.status.busy":"2024-08-15T13:55:04.121559Z","iopub.execute_input":"2024-08-15T13:55:04.122729Z","iopub.status.idle":"2024-08-15T13:55:04.145335Z","shell.execute_reply.started":"2024-08-15T13:55:04.122682Z","shell.execute_reply":"2024-08-15T13:55:04.143707Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"There are 29 unique fish to catch today!\n\nName:  barred knifejaw \n Where/How to find it:  Sea \n Shadow size:  Medium \n Sell for:  5000  bells \n\nName:  black bass \n Where/How to find it:  River \n Shadow size:  Large \n Sell for:  400  bells \n\nName:  blue marlin \n Where/How to find it:  Pier \n Shadow size:  XX-Large \n Sell for:  10000  bells \n\nName:  butterfly fish \n Where/How to find it:  Sea \n Shadow size:  Small \n Sell for:  1000  bells \n\nName:  carp \n Where/How to find it:  Pond \n Shadow size:  Large \n Sell for:  300  bells \n\nName:  clown fish \n Where/How to find it:  Sea \n Shadow size:  X-Small \n Sell for:  650  bells \n\nName:  coelacanth \n Where/How to find it:  Sea (rainy days) \n Shadow size:  XX-Large \n Sell for:  15000  bells \n\nName:  crawfish \n Where/How to find it:  Pond \n Shadow size:  Small \n Sell for:  200  bells \n\nName:  crucian carp \n Where/How to find it:  River \n Shadow size:  Small \n Sell for:  160  bells \n\nName:  frog \n Where/How to find it:  Pond \n Shadow size:  Small \n Sell for:  120  bells \n\nName:  giant trevally \n Where/How to find it:  Pier \n Shadow size:  X-Large \n Sell for:  4500  bells \n\nName:  goldfish \n Where/How to find it:  Pond \n Shadow size:  X-Small \n Sell for:  1300  bells \n\nName:  horse mackerel \n Where/How to find it:  Sea \n Shadow size:  Small \n Sell for:  150  bells \n\nName:  killifish \n Where/How to find it:  Pond \n Shadow size:  X-Small \n Sell for:  300  bells \n\nName:  mahi-mahi \n Where/How to find it:  Pier \n Shadow size:  X-Large \n Sell for:  6000  bells \n\nName:  moray eel \n Where/How to find it:  Sea \n Shadow size:  Long \n Sell for:  2000  bells \n\nName:  olive flounder \n Where/How to find it:  Sea \n Shadow size:  X-Large \n Sell for:  800  bells \n\nName:  puffer fish \n Where/How to find it:  Sea \n Shadow size:  Medium \n Sell for:  250  bells \n\nName:  red snapper \n Where/How to find it:  Sea \n Shadow size:  Large \n Sell for:  3000  bells \n\nName:  ribbon eel \n Where/How to find it:  Sea \n Shadow size:  Long \n Sell for:  600  bells \n\nName:  sea bass \n Where/How to find it:  Sea \n Shadow size:  X-Large \n Sell for:  400  bells \n\nName:  sea horse \n Where/How to find it:  Sea \n Shadow size:  X-Small \n Sell for:  1100  bells \n\nName:  squid \n Where/How to find it:  Sea \n Shadow size:  Medium \n Sell for:  500  bells \n\nName:  suckerfish \n Where/How to find it:  Sea \n Shadow size:  Medium w/Fin \n Sell for:  1500  bells \n\nName:  surgeonfish \n Where/How to find it:  Sea \n Shadow size:  Small \n Sell for:  1000  bells \n\nName:  sweetfish \n Where/How to find it:  River \n Shadow size:  Medium \n Sell for:  900  bells \n\nName:  tilapia \n Where/How to find it:  River \n Shadow size:  Medium \n Sell for:  800  bells \n\nName:  whale shark \n Where/How to find it:  Sea \n Shadow size:  Large w/Fin \n Sell for:  13000  bells \n\nName:  zebra turkeyfish \n Where/How to find it:  Sea \n Shadow size:  Medium \n Sell for:  500  bells \n\n","output_type":"stream"}]},{"cell_type":"code","source":"getThings('insects',\"snow\")","metadata":{"execution":{"iopub.status.busy":"2024-08-15T13:55:25.613047Z","iopub.execute_input":"2024-08-15T13:55:25.613500Z","iopub.status.idle":"2024-08-15T13:55:25.638337Z","shell.execute_reply.started":"2024-08-15T13:55:25.613463Z","shell.execute_reply":"2024-08-15T13:55:25.636750Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"There are 35 unique insects to catch today!\n\nName:  agrias butterfly \n Where/How to find it:  Flying near flowers \n Sell for:  3000  bells \n\nName:  ant \n Where/How to find it:  On rotten turnips \n Sell for:  80  bells \n\nName:  bagworm \n Where/How to find it:  Shaking trees (hardwood or cedar only) \n Sell for:  600  bells \n\nName:  banded dragonfly \n Where/How to find it:  Flying near water \n Sell for:  4500  bells \n\nName:  blue weevil beetle \n Where/How to find it:  On palm trees \n Sell for:  800  bells \n\nName:  brown cicada \n Where/How to find it:  On hardwood/cedar trees \n Sell for:  250  bells \n\nName:  cicada shell \n Where/How to find it:  On hardwood/cedar trees \n Sell for:  10  bells \n\nName:  citrus long-horned beetle \n Where/How to find it:  On tree stumps \n Sell for:  350  bells \n\nName:  darner dragonfly \n Where/How to find it:  Flying near water \n Sell for:  230  bells \n\nName:  diving beetle \n Where/How to find it:  On rivers/ponds \n Sell for:  800  bells \n\nName:  drone beetle \n Where/How to find it:  On trees (any kind) \n Sell for:  200  bells \n\nName:  earth-boring dung beetle \n Where/How to find it:  On the ground \n Sell for:  300  bells \n\nName:  flea \n Where/How to find it:  On villagers \n Sell for:  70  bells \n\nName:  fly \n Where/How to find it:  Flying near trash (boots, tires, cans) or rotten turnips \n Sell for:  60  bells \n\nName:  giant cicada \n Where/How to find it:  On hardwood/cedar trees \n Sell for:  500  bells \n\nName:  grasshopper \n Where/How to find it:  On the ground \n Sell for:  160  bells \n\nName:  jewel beetle \n Where/How to find it:  On tree stumps \n Sell for:  2400  bells \n\nName:  long locust \n Where/How to find it:  On the ground \n Sell for:  200  bells \n\nName:  mantis \n Where/How to find it:  On flowers \n Sell for:  430  bells \n\nName:  migratory locust \n Where/How to find it:  On the ground \n Sell for:  600  bells \n\nName:  miyama stag \n Where/How to find it:  On trees (any kind) \n Sell for:  1000  bells \n\nName:  orchid mantis \n Where/How to find it:  On white flowers \n Sell for:  2400  bells \n\nName:  paper kite butterfly \n Where/How to find it:  Flying near flowers \n Sell for:  1000  bells \n\nName:  pondskater \n Where/How to find it:  On rivers/ponds \n Sell for:  130  bells \n\nName:  Rajah Brooke's birdwing \n Where/How to find it:  Flying near flowers \n Sell for:  2500  bells \n\nName:  rice grasshopper \n Where/How to find it:  On the ground \n Sell for:  400  bells \n\nName:  robust cicada \n Where/How to find it:  On hardwood/cedar trees \n Sell for:  300  bells \n\nName:  rosalia batesi beetle \n Where/How to find it:  On tree stumps \n Sell for:  3000  bells \n\nName:  saw stag \n Where/How to find it:  On trees (any kind) \n Sell for:  2000  bells \n\nName:  stinkbug \n Where/How to find it:  On flowers \n Sell for:  120  bells \n\nName:  tiger beetle \n Where/How to find it:  On the ground \n Sell for:  1500  bells \n\nName:  walker cicada \n Where/How to find it:  On hardwood/cedar trees \n Sell for:  400  bells \n\nName:  walking leaf \n Where/How to find it:  Disguised under trees \n Sell for:  600  bells \n\nName:  wasp \n Where/How to find it:  Shaking trees \n Sell for:  2500  bells \n\nName:  wharf roach \n Where/How to find it:  On beach rocks \n Sell for:  200  bells \n\n","output_type":"stream"}]}]}